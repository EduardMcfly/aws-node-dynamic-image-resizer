service: cosva-files

frameworkVersion: '>=1.21.0 <2.0.0'

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment: ${self:custom.${self:provider.stage}}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:PutObjectAcl
      Resource: 'arn:aws:s3:::${self:custom.bucket}/*'
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}'

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

custom: ${file(./custom.yml)}

functions:
  uploadFile:
    handler: src/uploadFile.uploadFile
    events:
      - http:
          path: uploadFile
          method: post
          cors: true
  getFile:
    handler: src/getFile.getFile
    events:
      - http:
          path: getFile
          method: get
          cors: true
  uploadImage:
    handler: src/uploadImage.uploadImage
    events:
      - http:
          path: uploadImage
          method: post
          cors: true
  getImage:
    handler: src/getImage.getImage
    events:
      - http:
          path: getImage
          method: get
          cors: true
package:
  include:
    - .webpack/node_modules

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
